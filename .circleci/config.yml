version: 2

# jobs refer to a single execution of the build
jobs:
  # build is the name of the job....they can be multiple and unique
  build:
    # builds occur in a docker container
    docker:
      - image: circleci/python:3.7
      - image: circleci/postgres:latest
    environment:
    - POSTGRES_USER: postgres
    - POSTGRES_DB: circle_test
    - ANSIBLE_HOST_KEY_CHECKING: false
    working_directory: ~/repo

    # series/ list of steps done for the build
    steps:
      # Step 1: obtain repo from GitHub
      - checkout

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: install dependencies
          command: |
            virtualenv venv --python=python3
            . venv/bin/activate
            pip3 install -r requirements.txt
            pip3 install ansible
            sudo apt update
            sudo apt install rsync
      - run:
         name: run tests
         command: |
           . venv/bin/activate
           python3 manage.py test
           tox
           coverage run --source='.' manage.py test
           coverage report



  deploy:
    docker:
      - image: circleci/python:3.7
    environment:
      - ANSIBLE_HOST_KEY_CHECKING: False
    steps:
      - checkout
      # - run:
      #     name: verify git tag vs. version
      #     command: |
      #       python3 -m venv last
      #       . last/bin/activate
      #       python setup.py verify


      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = jonnybuoy" >> ~/.pypirc
            echo -e "password = jonny12905." >> ~/.pypirc

      - run:
          name: create packages
          command: |
            rm -rf ./build
            rm -rf ./dist
            python setup.py sdist bdist_wheel


      - run:
          name: upload to pypi
          command: |
            virtualenv venv --python=python3
            . venv/bin/activate
            twine upload --skip-existing ./dist/*

      - add_ssh_keys:
          fingerprints:
              - "53:3d:7a:ef:5e:8d:04:a3:6e:b4:1b:8a:a0:e0:67:f6"
      # # - run:
      #     # name: Make remote server a known host
      #     # command: ssh-keyscan josephdevs.duckdns.org >> ~/.ssh/known_hosts
      - run:
          name: deploying to ansible
          command: |
            virtualenv venv --python=python3
            . venv/bin/activate
            cd ./ansible
            ansible-playbook -i hosts provision.yml



workflows:
  version: 2
  build_deploy:  python3 -m venv last
            . last/bin/activate
    jobs:
    - build
    - deploy:
        requires:
          - build
        filters:
          branches:
            only: master
